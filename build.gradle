plugins {
  id 'java'
  id 'com.ewerk.gradle.plugins.integration-test' version "1.0.6"
  id 'ru.shadam.publish-plugin' version '0.3.0' apply false
  id "com.jfrog.bintray" version "1.7.3" apply false
  id "com.jfrog.artifactory" version "4.4.12" apply(false)
}

apply plugin: 'ru.shadam.publish-plugin'
apply plugin: (String)'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

repositories {
  jcenter()
  maven {
    url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
  }
}

publish {
  description = 'spring-data for tarantool'
  github project.github_username, project.name
  developerName = 'Timur Shakurov'
  license = project.license
  licenseUrl = 'https://raw.githubusercontent.com/saladinkzn/spring-data-tarantool/master/LICENSE'
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  pkg {
    repo = 'maven'
    name = project.name
    licenses = [project.license]
    vcsUrl = "https://github.com/${project.github_username}/${project.name}.git"
    publications = ['mavenJava']
  }
}

artifactory {
  contextUrl = 'https://oss.jfrog.org/artifactory'
  publish {
    repository {
      repoKey = 'oss-snapshot-local'
      username = System.getenv('BINTRAY_USER')
      password = System.getenv('BINTRAY_KEY')
    }
    defaults {
      publications ('mavenJava')
      publishArtifacts = true
      publishPom = true
    }
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
  compile 'org.springframework.data:spring-data-keyvalue:1.1.6.RELEASE'
  compile 'org.tarantool:connector:1.7.1'

  testCompile 'junit:junit:4.12'      
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile 'org.slf4j:slf4j-simple:1.7.22'

  testCompile 'com.google.guava:guava:19.0'
  testCompile 'com.palantir.docker.compose:docker-compose-rule:0.28.1'
}

test {
  testLogging {
    events "passed", "failed"
    exceptionFormat "full"
  }
}

integrationTest {
  testLogging {
    events "passed", "failed"
    exceptionFormat "full"
  }
}

project.tasks.integrationTest.mustRunAfter(project.tasks.test)
project.tasks.check.dependsOn(project.tasks.integrationTest)

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
}